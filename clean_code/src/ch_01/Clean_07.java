package ch_01;

public class Clean_07 {

	// 객체와 자료구조 
	// 변수를 비공개로 설정하는 이유는 남들이 변수에 의존하지 않게 만들고 싶어서이다.
	// 구현을 감추기 위하여서는 추상화가 필요 (변수 사이에 함수라는 계층을 넣는다고 구현이 저절로 감춰지지는 않음)
	// 객체는 추상화 뒤로 자료를 숨긴 채 자료를 다루는 함수만 공개,
	// 자료구조는 자료를 그대로 공개하며 별다른 함수는 제공하지 않는다.
	// 노련한 객체지향 설계자는 visitor 혹은 Dual-Patch 등과 같이 잘 알려진 기법을 사용
	
	// 디미터 법칙
	// 디미터 법칙은 휴리스틱으로, 모듈은 자신이 조작하는 객체의 속사  정을 몰라야 한다는 법칙
	// 객체는 자료를 숨기고, 함수를 공개
	
	// 자료 구조체의 전형적인 형태는 공개 변수만 있고 함수가 없는 클래스
	// 이런 자료 구조체를 떄로는 자료 전달 객체 (DTO) DTO 는 굉장히 유용한 구조체
	
	// 객체는 동작을 공개하고 자료를 숨긴다. 그래서 기존 동작을 변경하지 않을 시 서 새 객체 타입을 
	// 추가하기는 쉬운 반면 기존 객체에 새 동작을 추가하기는 어렵다.
	// 자료 구조는 별다른 동작 없이 자료를 노출, 그래서 기존 자료구조에 새 동작을 차가하기는 쉬우나 
	// 기존 함수에 새 자료 구조를 추가하기는 어렵다.
	
	
}
