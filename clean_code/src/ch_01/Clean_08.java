package ch_01;

public class Clean_08 {

	// OCP (Open - Closed - Principle) 
	// OPC란 클래스는 확장에 개방적이고 수정에 폐쇄적이어야 한다는 원칙
	// 새 기능을 수정하거나 기존 기능을 변경시에 건드릴 코드가 최소인 시스템구조가 바람직
	
	// 테스트가 가능할 정도로 시스템의 결합도를 낮추면 유연성과 재사용성이 더욱 높아진다
	// 결합도를 최소로 줄이면 자연스럽게 또 다른 클래스 설계 원칙인 
	// DIP (Dependency - Inversion - Principle) 따르는 클래스가 나온다
	
	// 사용자 제작을 분리하는 강력한 매커니즘 하나가 의존성 주입 (Dependency Injection)
	
	// 관심사를 관점으로 분리하는 가장 강력한 도구는 AspectJ
	// AspectJ 는 언어 차원에서 관점을 모듈화로 구성으로 지원하는 자바 확장 언어
	
	// DSL(Domain-Specific-Language)
	// DSL은 간단한 스크립트 언어나 표준 언어로 구현한 API
	// 좋은 DSL 은 도메인 개념과 그 개념을 구현한 코드 사이에 존재하는 의사소통 간극을 줄여준다.
	
	
}
